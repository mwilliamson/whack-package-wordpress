#!/usr/bin/env sh

set -e
set -x

ROOT_DIR=`pwd`
INSTALL_DIR=$1

# TODO: should track dependency externally, otherwise the output of this command
# is dependent on the current state of the branch master, which breaks caching
whack install \
    'git+https://github.com/mwilliamson/whack-package-apache2-mod-php5.git#c1a96fd65496d92636208c3d99e5324c8a86adc5' \
    "${INSTALL_DIR}"

WORDPRESS_DIR="${INSTALL_DIR}/wordpress"
WP_CLI_DIR="${INSTALL_DIR}/wp-cli"

mkdir -p "${WORDPRESS_DIR}"
tar xzf wordpress.tar.gz --directory "${WORDPRESS_DIR}" --strip-components 1

mkdir -p "${WP_CLI_DIR}"
curl -L http://wp-cli.org/packages/phar/wp-cli.phar > "${WP_CLI_DIR}/wp-cli.phar"
echo '#!/usr/bin/env sh' > "${WP_CLI_DIR}/wp"
echo "exec '${INSTALL_DIR}/bin/php' '${WP_CLI_DIR}/wp-cli.phar' --path='${WORDPRESS_DIR}'" '"$@"' >> "${WP_CLI_DIR}/wp"
chmod +x "${WP_CLI_DIR}/wp"
cp "${WP_CLI_DIR}/wp" "${INSTALL_DIR}/.bin/wp"

# TODO: at this point we want to stop the build, and allow the remaining steps
# to be run as part of deployment

"${WP_CLI_DIR}/wp" core config  \
    --dbname="${MYSQL_DATABASE}" \
    --dbuser="${MYSQL_USERNAME}" \
    --dbpass="${MYSQL_PASSWORD}" \
    --dbhost="${MYSQL_HOST-localhost}"
    
sed -i s!/usr/local/whack/htdocs!"${WORDPRESS_DIR}"!g "${INSTALL_DIR}/conf/httpd.conf"
sed -i "s!Listen 80!Listen ${PORT}!g" "${INSTALL_DIR}/conf/httpd.conf"
sed -i "s!DirectoryIndex index.html!DirectoryIndex index.php index.html!g" "${INSTALL_DIR}/conf/httpd.conf"
"${WP_CLI_DIR}/wp" core is-installed || \
    "${WP_CLI_DIR}/wp" core install \
        --url=http://localhost:"${PORT}"/ \
        --title='Development WordPress site' \
        --admin_email=admin@example.com \
        --admin_password=password1
    
mysql -u"${MYSQL_USERNAME}" -p"${MYSQL_PASSWORD}" "${MYSQL_DATABASE}" \
    --execute "UPDATE wp_options SET option_value='http://localhost:${PORT}/' WHERE option_name in ('home', 'siteurl')"

# TODO: Need to install MySQL
